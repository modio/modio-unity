// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class Collections
        {
            /// <summary>Unfollow a collection for a game. Successful request will return `204 No Content`.</summary>
            internal static async Task<(Error error, JToken response204)> UnfollowCollectionAsJToken(
                long collectionId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/collections/{collectionId}/followers", ModioAPIRequestMethod.Delete, ModioAPIRequestContentType.FormUrlEncoded);

                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson(request);
            }

            /// <summary>Unfollow a collection for a game. Successful request will return `204 No Content`.</summary>
            /// <param name="collectionId">The ID of the collection to unfollow.</param>
            internal static async Task<(Error error, Response204? response204)> UnfollowCollection(
                long collectionId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/collections/{collectionId}/followers", ModioAPIRequestMethod.Delete, ModioAPIRequestContentType.FormUrlEncoded);

                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson<Response204>(request);
            }
        }
    }
}
