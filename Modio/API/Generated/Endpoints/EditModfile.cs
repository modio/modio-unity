// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class Files
        {
            /// <summary>Edit the details of a published file. If you want to update fields other than the `changelog`, `version` and `active` status, you should add a new file instead. Successful request will return updated [Modfile Object](#modfile-object).</summary>
            internal static async Task<(Error error, JToken modfileObject)> EditModfileAsJToken(
                long modId,
                long fileId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/mods/{modId}/files/{fileId}", ModioAPIRequestMethod.Put, ModioAPIRequestContentType.FormUrlEncoded);

                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson(request);
            }

            /// <summary>Edit the details of a published file. If you want to update fields other than the `changelog`, `version` and `active` status, you should add a new file instead. Successful request will return updated [Modfile Object](#modfile-object).</summary>
            /// <param name="modId">Mod id</param>
            /// <param name="fileId">Modfile id</param>
            internal static async Task<(Error error, ModfileObject? modfileObject)> EditModfile(
                long modId,
                long fileId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/mods/{modId}/files/{fileId}", ModioAPIRequestMethod.Put, ModioAPIRequestContentType.FormUrlEncoded);

                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson<ModfileObject>(request);
            }
        }
    }
}
