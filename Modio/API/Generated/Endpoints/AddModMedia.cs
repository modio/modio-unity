// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class Media
        {
            /// <summary>
            /// <p>This endpoint is very flexible and will add any images posted to the mods gallery regardless of their body name providing they are a valid image. The request `Content-Type` header __must__ be `multipart/form-data` to submit image files. Successful request will return a [Message Object](#message-object).</p>
            /// <p>__NOTE:__ You can also add media to [your mod's profile](https://mod.io/content) on the mod.io website. This is the easiest way.</p>
            /// </summary>
            internal static async Task<(Error error, JToken updateModMediaResponse)> AddModMediaAsJToken(
                long modId,
                AddModMediaRequest? body = null
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/mods/{modId}/media", ModioAPIRequestMethod.Post, ModioAPIRequestContentType.MultipartFormData);

                request.Options.AddBody(body);
                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson(request);
            }

            /// <summary>
            /// <p>This endpoint is very flexible and will add any images posted to the mods gallery regardless of their body name providing they are a valid image. The request `Content-Type` header __must__ be `multipart/form-data` to submit image files. Successful request will return a [Message Object](#message-object).</p>
            /// <p>__NOTE:__ You can also add media to [your mod's profile](https://mod.io/content) on the mod.io website. This is the easiest way.</p>
            /// </summary>
            /// <param name="modId">Mod id</param>
            /// <param name="body"></param>
            internal static async Task<(Error error, UpdateModMediaResponse? updateModMediaResponse)> AddModMedia(
                long modId,
                AddModMediaRequest? body = null
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/mods/{modId}/media", ModioAPIRequestMethod.Post, ModioAPIRequestContentType.MultipartFormData);

                request.Options.AddBody(body);
                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson<UpdateModMediaResponse>(request);
            }
        }
    }
}
