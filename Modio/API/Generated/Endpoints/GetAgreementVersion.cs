// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class Agreements
        {
            /// <summary>Get the specified agreement version. Successful request will return an [Agreement Version Object](#agreement-version-object).</summary>
            internal static async Task<(Error error, JToken agreementVersionObject)> GetAgreementVersionAsJToken(
                long agreementVersionId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/agreements/versions/{agreementVersionId}", ModioAPIRequestMethod.Get, ModioAPIRequestContentType.FormUrlEncoded);


                return await _apiInterface.GetJson(request);
            }

            /// <summary>Get the specified agreement version. Successful request will return an [Agreement Version Object](#agreement-version-object).</summary>
            /// <param name="agreementVersionId">Agreement Version id</param>
            internal static async Task<(Error error, AgreementVersionObject? agreementVersionObject)> GetAgreementVersion(
                long agreementVersionId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/agreements/versions/{agreementVersionId}", ModioAPIRequestMethod.Get, ModioAPIRequestContentType.FormUrlEncoded);


                return await _apiInterface.GetJson<AgreementVersionObject>(request);
            }
        }
    }
}
