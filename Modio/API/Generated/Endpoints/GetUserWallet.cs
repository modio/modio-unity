// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class Me
        {
            /// <summary>Get the _authenticated user_ wallets. Successful request will return a single [Wallet Object](#wallet-object).</summary>
            internal static async Task<(Error error, JToken walletObject)> GetUserWalletAsJToken(
                long gameId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/me/wallets", ModioAPIRequestMethod.Get);

                request.Options.AddQueryParameter("game_id", gameId);
                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson(request);
            }

            /// <summary>Get the _authenticated user_ wallets. Successful request will return a single [Wallet Object](#wallet-object).</summary>
            internal static async Task<(Error error, WalletObject? walletObject)> GetUserWallet(
                long gameId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/me/wallets", ModioAPIRequestMethod.Get);

                request.Options.AddQueryParameter("game_id", gameId);
                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson<WalletObject>(request);
            }
        }
    }
}
