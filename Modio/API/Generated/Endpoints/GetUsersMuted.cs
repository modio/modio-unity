// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class Me
        {
            /// <summary>Get all users muted by the _authenticated user_. Successful request will return an array of [User Objects](#user-object).</summary>
            internal static async Task<(Error error, JToken userObjects)> GetUsersMutedAsJToken(
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/me/users/muted", ModioAPIRequestMethod.Get);

                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson(request);
            }

            /// <summary>Get all users muted by the _authenticated user_. Successful request will return an array of [User Objects](#user-object).</summary>
            internal static async Task<(Error error, Pagination<UserObject[]>? userObjects)> GetUsersMuted(
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/me/users/muted", ModioAPIRequestMethod.Get);

                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson<Pagination<UserObject[]>>(request);
            }
        }
    }
}
