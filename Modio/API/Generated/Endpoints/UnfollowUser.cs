// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class Followers
        {
            /// <summary>Unfollow the given user from the target user. Successful request will return `204 No Content`.</summary>
            internal static async Task<(Error error, JToken response204)> UnfollowUserAsJToken(
                long userId,
                long targetUserId
            )
            {
                if (!IsInitialized())
                    return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New(
                    $"/users/{userId}/following/{targetUserId}",
                    ModioAPIRequestMethod.Delete,
                    ModioAPIRequestContentType.FormUrlEncoded
                );

                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson(request);
            }

            /// <summary>Unfollow the given user from the target user. Successful request will return `204 No Content`.</summary>
            /// <param name="userId">ID of the user following</param>
            /// <param name="targetUserId">ID of the user being unfollowed</param>
            internal static async Task<(Error error, Response204? response204)> UnfollowUser(
                long userId,
                long targetUserId
            )
            {
                if (!IsInitialized())
                    return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New(
                    $"/users/{userId}/following/{targetUserId}",
                    ModioAPIRequestMethod.Delete,
                    ModioAPIRequestContentType.FormUrlEncoded
                );

                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson<Response204>(request);
            }
        }
    }
}
