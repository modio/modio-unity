// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class InAppPurchases
        {
            /// <summary>Convert an in-game consumable that a user has purchased on Xbox Live into a users mod.io inventory. For an entitlement to be eligible for consumption it must be registered on mod.io within the In-App Purchases section of your game profile. This endpoint will consume the entitlement on behalf of the user against the portal in which the entitlements reside (i.e. Xbox Live).</summary>
            /// <param name="">Convert an in-game consumable that a user has purchased on Xbox Live into a users mod.io inventory. For an entitlement to be eligible for consumption it must be registered on mod.io within the In-App Purchases section of your game profile. This endpoint will consume the entitlement on behalf of the user against the portal in which the entitlements reside (i.e. Xbox Live).,,     Parameter|Type|Required|Description,     ---|---|---|---|,     xbox_token|string|true|The Xbox Live token returned from calling [GetTokenAndSignatureAsync("POST", "https://*.modapi.io")](https://docs.microsoft.com/en-us/dotnet/api/microsoft.xbox.services.system.xboxliveuser.gettokenandsignatureasync?view=xboxlive-dotnet-2017.11.20171204.01). <br/><br/>__NOTE:__ Due to the encrypted app ticket containing special characters, you must URL encode the string before sending the request to ensure it is successfully sent to our servers otherwise you may encounter an `422 Unprocessable Entity` response. For example, [cURL](https://ec.haxx.se/http-post.html) will do this for you by using the `--data-urlencode` option.     </param>
            /// <param name="body"></param>
            internal static async Task<(Error error, JToken entitlementFulfillmentObjects)> SyncXboxLiveEntitlementsAsJToken(
                SyncXboxEntitlementsRequest? body = null
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/me/iap/xboxlive/sync", ModioAPIRequestMethod.Post, ModioAPIRequestContentType.FormUrlEncoded);

                request.Options.AddBody(body);
                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson(request);
            }

            /// <summary>Convert an in-game consumable that a user has purchased on Xbox Live into a users mod.io inventory. For an entitlement to be eligible for consumption it must be registered on mod.io within the In-App Purchases section of your game profile. This endpoint will consume the entitlement on behalf of the user against the portal in which the entitlements reside (i.e. Xbox Live).</summary>
            /// <param name="">Convert an in-game consumable that a user has purchased on Xbox Live into a users mod.io inventory. For an entitlement to be eligible for consumption it must be registered on mod.io within the In-App Purchases section of your game profile. This endpoint will consume the entitlement on behalf of the user against the portal in which the entitlements reside (i.e. Xbox Live).,,     Parameter|Type|Required|Description,     ---|---|---|---|,     xbox_token|string|true|The Xbox Live token returned from calling [GetTokenAndSignatureAsync("POST", "https://*.modapi.io")](https://docs.microsoft.com/en-us/dotnet/api/microsoft.xbox.services.system.xboxliveuser.gettokenandsignatureasync?view=xboxlive-dotnet-2017.11.20171204.01). <br/><br/>__NOTE:__ Due to the encrypted app ticket containing special characters, you must URL encode the string before sending the request to ensure it is successfully sent to our servers otherwise you may encounter an `422 Unprocessable Entity` response. For example, [cURL](https://ec.haxx.se/http-post.html) will do this for you by using the `--data-urlencode` option.     </param>
            internal static async Task<(Error error, Pagination<EntitlementFulfillmentObject[]>? entitlementFulfillmentObjects)> SyncXboxLiveEntitlements(
                SyncXboxEntitlementsRequest? body = null
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/me/iap/xboxlive/sync", ModioAPIRequestMethod.Post, ModioAPIRequestContentType.FormUrlEncoded);

                request.Options.AddBody(body);
                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson<Pagination<EntitlementFulfillmentObject[]>>(request);
            }
        }
    }
}
