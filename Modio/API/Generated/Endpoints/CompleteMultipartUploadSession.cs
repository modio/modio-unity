// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class FilesMultipartUploads
        {
            /// <summary>
            /// <p>Complete an active multipart upload session, this endpoint assumes that you have already uploaded</p>
            /// <p>all individual parts. A successful request will return a `200 OK` response code and return a single [Multipart Upload Object](#multipart-upload-object).</p>
            /// </summary>
            internal static async Task<(Error error, JToken multipartUploadObject)> CompleteMultipartUploadSessionAsJToken(
                string uploadId,
                long modId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/mods/{modId}/files/multipart/complete", ModioAPIRequestMethod.Post);

                request.Options.AddQueryParameter("upload_id", uploadId);
                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson(request);
            }

            /// <summary>
            /// <p>Complete an active multipart upload session, this endpoint assumes that you have already uploaded</p>
            /// <p>all individual parts. A successful request will return a `200 OK` response code and return a single [Multipart Upload Object](#multipart-upload-object).</p>
            /// </summary>
            /// <param name="modId">Mod id</param>
            internal static async Task<(Error error, MultipartUploadObject? multipartUploadObject)> CompleteMultipartUploadSession(
                string uploadId,
                long modId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/mods/{modId}/files/multipart/complete", ModioAPIRequestMethod.Post);

                request.Options.AddQueryParameter("upload_id", uploadId);
                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson<MultipartUploadObject>(request);
            }
        }
    }
}
