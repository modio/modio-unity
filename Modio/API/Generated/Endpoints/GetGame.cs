// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class Games
        {
            /// <summary>Get a game. Successful request will return a single [Game Object](#game-object). We recommended reading the [filtering documentation](#filtering) to return only the records you want.</summary>
            internal static async Task<(Error error, JToken gameObject)> GetGameAsJToken(
                bool? showHiddenTags = null
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}", ModioAPIRequestMethod.Get);

                request.Options.AddQueryParameter("show_hidden_tags", showHiddenTags);

                return await _apiInterface.GetJson(request);
            }

            /// <summary>Get a game. Successful request will return a single [Game Object](#game-object). We recommended reading the [filtering documentation](#filtering) to return only the records you want.</summary>
            internal static async Task<(Error error, GameObject? gameObject)> GetGame(
                bool? showHiddenTags = null
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}", ModioAPIRequestMethod.Get);

                request.Options.AddQueryParameter("show_hidden_tags", showHiddenTags);

                return await _apiInterface.GetJson<GameObject>(request);
            }
        }
    }
}
