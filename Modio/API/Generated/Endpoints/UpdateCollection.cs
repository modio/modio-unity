// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class Collections
        {
            /// <summary>Update an existing collection for a game. Successful request will return the updated [Mod Collection Object](#mod-collection-object).</summary>
            internal static async Task<(Error error, JToken modCollectionObject)> UpdateCollectionAsJToken(
                UpdateCollectionRequest body,
                long collectionId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/collections/{collectionId}", ModioAPIRequestMethod.Post, ModioAPIRequestContentType.MultipartFormData);

                request.Options.AddBody(body);
                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson(request);
            }

            /// <summary>Update an existing collection for a game. Successful request will return the updated [Mod Collection Object](#mod-collection-object).</summary>
            /// <param name="body">The request body containing the collection details to update.</param>
            /// <param name="collectionId">The ID of the collection to update.</param>
            internal static async Task<(Error error, ModCollectionObject? modCollectionObject)> UpdateCollection(
                UpdateCollectionRequest body,
                long collectionId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/collections/{collectionId}", ModioAPIRequestMethod.Post, ModioAPIRequestContentType.MultipartFormData);

                request.Options.AddBody(body);
                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson<ModCollectionObject>(request);
            }
        }
    }
}
