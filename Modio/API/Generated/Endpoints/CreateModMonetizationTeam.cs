// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class Monetization
        {
            /// <summary>Send a request to create a monetization team for a mod team. Successful request will return a [Monetization Team Accounts Object](#monetization-team-accounts-object).</summary>
            internal static async Task<(Error error, JToken monetizationTeamAccountsObject)> CreateModMonetizationTeamAsJToken(
                long modId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/mods/{modId}/monetization/team", ModioAPIRequestMethod.Post, ModioAPIRequestContentType.MultipartFormData);

                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson(request);
            }

            /// <summary>Send a request to create a monetization team for a mod team. Successful request will return a [Monetization Team Accounts Object](#monetization-team-accounts-object).</summary>
            /// <param name="modId">Mod id</param>
            internal static async Task<(Error error, MonetizationTeamAccountsObject? monetizationTeamAccountsObject)> CreateModMonetizationTeam(
                long modId
            ) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/games/{{game-id}}/mods/{modId}/monetization/team", ModioAPIRequestMethod.Post, ModioAPIRequestContentType.MultipartFormData);

                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson<MonetizationTeamAccountsObject>(request);
            }
        }
    }
}
