/*
 *
 *
 * DO NOT REGENERATE
 * 
 * 
 */

// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using Modio.API.SchemaDefinitions;
using Modio.Errors;

namespace Modio.API
{
    public static partial class ModioAPI
    {
        public static partial class InAppPurchases
        {
            /// <summary>Convert in-app consumables that a user has purchased on the iOS store into their mod.io inventory. For an entitlement to be eligible for consumption it must be registered on mod.io within the In-App Purchases section of your game profile. This endpoint will consume the entitlement on behalf of the user against the portal in which the entitlements reside (i.e. Apple).</summary>
            /// <param name="">Convert in-app consumables that a user has purchased on the iOS store into their mod.io inventory. For an entitlement to be eligible for consumption it must be registered on mod.io within the In-App Purchases section of your game profile. This endpoint will consume the entitlement on behalf of the user against the portal in which the entitlements reside (i.e. Apple).,,     Parameter|Type|Required|Description,     ---|---|---|---|,     receipt|string|true|The receipt returned to your app after a successful purchase on the iOS marketplace.</param>
            /// <param name="body"></param>
            public static async Task<(Error error, JToken entitlementFulfillmentObjects)> SyncAppleEntitlementAsJToken(string payload) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/me/iap/apple/sync", ModioAPIRequestMethod.Post, ModioAPIRequestContentType.FormUrlEncoded);

                request.Options.AddBody(new AppleSyncEntitlementsRequestBody(payload));

                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson(request);
            }

            /// <summary>Convert in-app consumables that a user has purchased on the iOS store into their mod.io inventory. For an entitlement to be eligible for consumption it must be registered on mod.io within the In-App Purchases section of your game profile. This endpoint will consume the entitlement on behalf of the user against the portal in which the entitlements reside (i.e. Apple).</summary>
            /// <param name="">Convert in-app consumables that a user has purchased on the iOS store into their mod.io inventory. For an entitlement to be eligible for consumption it must be registered on mod.io within the In-App Purchases section of your game profile. This endpoint will consume the entitlement on behalf of the user against the portal in which the entitlements reside (i.e. Apple).,,     Parameter|Type|Required|Description,     ---|---|---|---|,     receipt|string|true|The receipt returned to your app after a successful purchase on the iOS marketplace.</param>
            public static async Task<(Error error, Pagination<EntitlementFulfillmentObject[]>? entitlementFulfillmentObjects)> SyncAppleEntitlement(string payload) {
                if (!IsInitialized()) return (new Error(ErrorCode.API_NOT_INITIALIZED), null);

                using var request = ModioAPIRequest.New($"/me/iap/apple/sync", ModioAPIRequestMethod.Post, ModioAPIRequestContentType.FormUrlEncoded);

                request.Options.AddBody(new AppleSyncEntitlementsRequestBody(payload));
                
                request.Options.RequireAuthentication();

                return await _apiInterface.GetJson<Pagination<EntitlementFulfillmentObject[]>>(request);
            }
        }
    }
}
