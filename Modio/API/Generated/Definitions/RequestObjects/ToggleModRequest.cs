// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    internal readonly partial struct ToggleModRequest : IApiRequest
    {
        static readonly Dictionary<string, object> _bodyParameters = new Dictionary<string, object>();

        /// <summary>Enable or disable marketplace.</summary>
        internal readonly string MarketplaceEffect;
        /// <summary>Enable or disable limited quantity.</summary>
        internal readonly string LimitedEffect;
        /// <summary>Email authentication code.</summary>
        internal readonly string Code;

        /// <param name="marketplaceEffect">Enable or disable marketplace.</param>
        /// <param name="limitedEffect">Enable or disable limited quantity.</param>
        /// <param name="code">Email authentication code.</param>
        [JsonConstructor]
        public ToggleModRequest(
            string marketplace_effect,
            string limited_effect,
            string code
        ) {
            MarketplaceEffect = marketplace_effect;
            LimitedEffect = limited_effect;
            Code = code;
        }

        public IReadOnlyDictionary<string, object> GetBodyParameters()
        {
            _bodyParameters.Clear();

            _bodyParameters.Add("marketplace_effect", MarketplaceEffect);
            _bodyParameters.Add("limited_effect", LimitedEffect);
            _bodyParameters.Add("code", Code);

            return _bodyParameters;
        }
    }
}
