// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    internal readonly partial struct PayRequest : IApiRequest
    {
        static readonly Dictionary<string, object> _bodyParameters = new Dictionary<string, object>();

        /// <summary>The amount/price that was displayed to the user.</summary>
        internal readonly long DisplayAmount;
        /// <summary>Optional boolean to subscribe to the mod when purchasing. Default is true.</summary>
        internal readonly bool Subscribe;
        /// <summary>An alphanumeric nonce value of your choosing. Max length of 255 characters.</summary>
        internal readonly string IdempotentKey;

        /// <param name="displayAmount">The amount/price that was displayed to the user.</param>
        /// <param name="subscribe">Optional boolean to subscribe to the mod when purchasing. Default is true.</param>
        /// <param name="idempotentKey">An alphanumeric nonce value of your choosing. Max length of 255 characters.</param>
        [JsonConstructor]
        public PayRequest(
            long display_amount,
            bool subscribe,
            string idempotent_key
        ) {
            DisplayAmount = display_amount;
            Subscribe = subscribe;
            IdempotentKey = idempotent_key;
        }

        public IReadOnlyDictionary<string, object> GetBodyParameters()
        {
            _bodyParameters.Clear();

            _bodyParameters.Add("display_amount", DisplayAmount);
            _bodyParameters.Add("subscribe", Subscribe);
            _bodyParameters.Add("idempotent_key", IdempotentKey);

            return _bodyParameters;
        }
    }
}
