// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    internal readonly partial struct EpicGamesAuthenticationRequest : IApiRequest
    {
        static readonly Dictionary<string, object> _bodyParameters = new Dictionary<string, object>();

        /// <summary></summary>
        internal readonly string AccessToken;
        /// <summary></summary>
        internal readonly bool TermsAgreed;
        /// <summary></summary>
        internal readonly string Email;
        /// <summary></summary>
        internal readonly long DateExpires;

        /// <param name="accessToken"></param>
        /// <param name="termsAgreed"></param>
        /// <param name="email"></param>
        /// <param name="dateExpires"></param>
        [JsonConstructor]
        public EpicGamesAuthenticationRequest(
            string access_token,
            bool terms_agreed,
            string email,
            long date_expires
        ) {
            AccessToken = access_token;
            TermsAgreed = terms_agreed;
            Email = email;
            DateExpires = date_expires;
        }

        public IReadOnlyDictionary<string, object> GetBodyParameters()
        {
            _bodyParameters.Clear();

            _bodyParameters.Add("access_token", AccessToken);
            _bodyParameters.Add("terms_agreed", TermsAgreed);
            _bodyParameters.Add("email", Email);
            _bodyParameters.Add("date_expires", DateExpires);

            return _bodyParameters;
        }
    }
}
