// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    internal readonly partial struct CreateMultipartUploadSessionRequest : IApiRequest
    {
        static readonly Dictionary<string, object> _bodyParameters = new Dictionary<string, object>();

        /// <summary></summary>
        internal readonly string Filename;
        /// <summary>An idempotency key to help you prevent duplicating sessions. Max 64 characters (Recommended: SHA-256)</summary>
        internal readonly string Nonce;

        /// <param name="filename"></param>
        /// <param name="nonce">An idempotency key to help you prevent duplicating sessions. Max 64 characters (Recommended: SHA-256)</param>
        [JsonConstructor]
        public CreateMultipartUploadSessionRequest(
            string filename,
            string nonce
        ) {
            Filename = filename;
            Nonce = nonce;
        }

        public IReadOnlyDictionary<string, object> GetBodyParameters()
        {
            _bodyParameters.Clear();

            _bodyParameters.Add("filename", Filename);
            _bodyParameters.Add("nonce", Nonce);

            return _bodyParameters;
        }
    }
}
