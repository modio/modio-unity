// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject(MemberSerialization.Fields)]
    internal readonly partial struct AddCollectionRequest : IApiRequest
    {
        static readonly Dictionary<string, object> _bodyParameters = new Dictionary<string, object>();

        /// <summary>The name of the collection.</summary>
        internal readonly string Name;
        /// <summary>The unique slug for the collection.</summary>
        internal readonly string NameId;
        /// <summary>A brief summary of the collection.</summary>
        internal readonly string Summary;
        /// <summary>The category of the collection.</summary>
        internal readonly long Category;
        /// <summary>A detailed description of the collection.</summary>
        internal readonly string Description;
        /// <summary>The logo image file for the collection.</summary>
        internal readonly ModioAPIFileParameter Logo;
        /// <summary>The status of the collection. 0 = Not Accepted, 1 = Accepted. Note: Only admins can set this.</summary>
        internal readonly long Status;
        /// <summary>Visibility of the collection. 0 = Hidden, 1 = Public.</summary>
        internal readonly long Visible;
        /// <summary>Tags associated with the collection. Available options are:<br/><br/>- * Animation<br/>-  * Audio<br/>-  * Bug Fixes<br/>-  * Cheating<br/>-  * Environment<br/>-  * Gameplay<br/>-  * Quality of Life<br/>-  * UI<br/>-  * Visuals.</summary>
        internal readonly string[] Tags;
        /// <summary>IDs of the mods included in the collection.</summary>
        internal readonly long[] ModIds;

        /// <param name="name">The name of the collection.</param>
        /// <param name="nameId">The unique slug for the collection.</param>
        /// <param name="summary">A brief summary of the collection.</param>
        /// <param name="category">The category of the collection.</param>
        /// <param name="description">A detailed description of the collection.</param>
        /// <param name="logo">The logo image file for the collection.</param>
        /// <param name="status">The status of the collection. 0 = Not Accepted, 1 = Accepted. Note: Only admins can set this.</param>
        /// <param name="visible">Visibility of the collection. 0 = Hidden, 1 = Public.</param>
        /// <param name="tags">Tags associated with the collection. Available options are:<br/><br/>- * Animation<br/>-  * Audio<br/>-  * Bug Fixes<br/>-  * Cheating<br/>-  * Environment<br/>-  * Gameplay<br/>-  * Quality of Life<br/>-  * UI<br/>-  * Visuals.</param>
        /// <param name="modIds">IDs of the mods included in the collection.</param>
        [JsonConstructor]
        public AddCollectionRequest(
            string name,
            string name_id,
            string summary,
            long category,
            string description,
            ModioAPIFileParameter logo,
            long status,
            long visible,
            string[] tags,
            long[] mod_ids
        ) {
            Name = name;
            NameId = name_id;
            Summary = summary;
            Category = category;
            Description = description;
            Logo = logo;
            Status = status;
            Visible = visible;
            Tags = tags;
            ModIds = mod_ids;
        }

        public IReadOnlyDictionary<string, object> GetBodyParameters()
        {
            _bodyParameters.Clear();

            _bodyParameters.Add("name", Name);
            _bodyParameters.Add("name_id", NameId);
            _bodyParameters.Add("summary", Summary);
            _bodyParameters.Add("category", Category);
            _bodyParameters.Add("description", Description);
            _bodyParameters.Add("logo", Logo);
            _bodyParameters.Add("status", Status);
            _bodyParameters.Add("visible", Visible);
            _bodyParameters.Add("tags", Tags);
            _bodyParameters.Add("mod_ids", ModIds);

            return _bodyParameters;
        }
    }
}
