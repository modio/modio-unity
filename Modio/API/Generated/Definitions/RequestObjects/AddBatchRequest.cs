// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject(NamingStrategyType = typeof(SnakeCaseNamingStrategy))]
    internal readonly partial struct AddBatchRequest : IApiRequest
    {
        static readonly Dictionary<string, object> _bodyParameters = new Dictionary<string, object>();

        /// <summary>Contains batch data.</summary>
        internal readonly string Batch0RelativeUrl;
        /// <summary>Contains batch data.</summary>
        internal readonly string Batch0Method;
        /// <summary>Contains batch data.</summary>
        internal readonly string Batch1RelativeUrl;
        /// <summary>Contains batch data.</summary>
        internal readonly string Batch1Method;
        /// <summary>Contains batch data.</summary>
        internal readonly string Batch2RelativeUrl;
        /// <summary>Contains batch data.</summary>
        internal readonly string Batch2Method;

        /// <param name="batch0RelativeUrl">Contains batch data.</param>
        /// <param name="batch0Method">Contains batch data.</param>
        /// <param name="batch1RelativeUrl">Contains batch data.</param>
        /// <param name="batch1Method">Contains batch data.</param>
        /// <param name="batch2RelativeUrl">Contains batch data.</param>
        /// <param name="batch2Method">Contains batch data.</param>
        [JsonConstructor]
        public AddBatchRequest(
            string batch0RelativeUrl,
            string batch0Method,
            string batch1RelativeUrl,
            string batch1Method,
            string batch2RelativeUrl,
            string batch2Method
        ) {
            Batch0RelativeUrl = batch0RelativeUrl;
            Batch0Method = batch0Method;
            Batch1RelativeUrl = batch1RelativeUrl;
            Batch1Method = batch1Method;
            Batch2RelativeUrl = batch2RelativeUrl;
            Batch2Method = batch2Method;
        }

        public IReadOnlyDictionary<string, object> GetBodyParameters()
        {
            _bodyParameters.Clear();

            _bodyParameters.Add("batch[0][relative_url]", Batch0RelativeUrl);
            _bodyParameters.Add("batch[0][method]", Batch0Method);
            _bodyParameters.Add("batch[1][relative_url]", Batch1RelativeUrl);
            _bodyParameters.Add("batch[1][method]", Batch1Method);
            _bodyParameters.Add("batch[2][relative_url]", Batch2RelativeUrl);
            _bodyParameters.Add("batch[2][method]", Batch2Method);

            return _bodyParameters;
        }
    }
}
