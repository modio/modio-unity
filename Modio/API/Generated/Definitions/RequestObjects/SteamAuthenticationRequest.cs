// <auto-generated />
// NOT ACTUALLY

/*
 *
 *
 *  DO NOT REGENERATE
 *
 *
 */

using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    public readonly partial struct SteamAuthenticationRequest : IApiRequest
    {
        static readonly Dictionary<string, object> _bodyParameters = new Dictionary<string, object>();

        /// <summary></summary>
        internal readonly string Appdata;
        /// <summary></summary>
        internal readonly bool TermsAgreed;
#nullable enable
        /// <summary></summary>
        internal readonly string? Email;
#nullable disable

        /// <summary></summary>
        internal readonly long DateExpires;

        /// <param name="appdata"></param>
        /// <param name="termsAgreed"></param>
        /// <param name="email"></param>
        /// <param name="dateExpires"></param>
        [JsonConstructor]
        public SteamAuthenticationRequest(
            string appdata,
            bool termsAgreed,
#nullable enable
            string? email,
#nullable disable
            long dateExpires
        ) {
            Appdata = appdata;
            TermsAgreed = termsAgreed;
            Email = email;
            DateExpires = dateExpires;
        }

        public IReadOnlyDictionary<string, object> GetBodyParameters()
        {
            _bodyParameters.Clear();

            _bodyParameters.Add("appdata", Appdata);
            _bodyParameters.Add("terms_agreed", TermsAgreed);
            if (!string.IsNullOrEmpty(Email)) _bodyParameters.Add("email", Email);
            _bodyParameters.Add("date_expires", DateExpires);

            return _bodyParameters;
        }
    }
}
