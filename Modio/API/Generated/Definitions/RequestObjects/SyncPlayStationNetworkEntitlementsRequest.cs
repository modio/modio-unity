// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    public readonly partial struct SyncPlayStationNetworkEntitlementsRequest : IApiRequest
    {
        static readonly Dictionary<string, object> _bodyParameters = new Dictionary<string, object>();

        /// <summary>PlayStation™Network authentication code.</summary>
        public readonly string AuthCode;
        /// <summary>The PlayStation Network environment you are targeting. If omitted, the request will default to targeting PlayStation Network's production environment.</summary>
        public readonly long Env;
        /// <summary>The service label where the entitlements for mod.io reside. If omitted the default value will be 0.</summary>
        public readonly long ServiceLabel;

        /// <param name="authCode">PlayStation™Network authentication code.</param>
        /// <param name="env">The PlayStation Network environment you are targeting. If omitted, the request will default to targeting PlayStation Network's production environment.</param>
        /// <param name="serviceLabel">The service label where the entitlements for mod.io reside. If omitted the default value will be 0.</param>
        [JsonConstructor]
        public SyncPlayStationNetworkEntitlementsRequest(
            string auth_code,
            long env,
            long service_label
        ) {
            AuthCode = auth_code;
            Env = env;
            ServiceLabel = service_label;
        }

        public IReadOnlyDictionary<string, object> GetBodyParameters()
        {
            _bodyParameters.Clear();

            _bodyParameters.Add("auth_code", AuthCode);
            _bodyParameters.Add("env", Env);
            _bodyParameters.Add("service_label", ServiceLabel);

            return _bodyParameters;
        }
    }
}
