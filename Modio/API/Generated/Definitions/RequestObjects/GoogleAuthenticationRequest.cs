/*
 *
 *
 *  DO NOT REGENERTE
 *
 * 
 */


// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    public readonly partial struct GoogleAuthenticationRequest : IApiRequest
    {
        static readonly Dictionary<string, object> _bodyParameters = new Dictionary<string, object>();

        internal readonly string AuthCode;
        internal readonly bool TermsAgreed;
        internal readonly long DateExpires;
#nullable enable
        internal readonly string? Email;
#nullable disable
        
        /// <param name="idToken"></param>
        /// <param name="termsAgreed"></param>
        /// <param name="dateExpires"></param>
        [JsonConstructor]
        public GoogleAuthenticationRequest(
            string authCode,
            bool terms_agreed,
#nullable enable
            string? email,
#nullable disable
            long date_expires
        ) {
            AuthCode = authCode;
            TermsAgreed = terms_agreed;
            Email = email;
            DateExpires = date_expires;
        }

        public IReadOnlyDictionary<string, object> GetBodyParameters()
        {
            _bodyParameters.Clear();

            _bodyParameters.Add("auth_code", AuthCode);
            _bodyParameters.Add("terms_agreed", TermsAgreed);
            if (!string.IsNullOrEmpty(Email)) _bodyParameters.Add("email", Email);
            _bodyParameters.Add("date_expires", DateExpires);

            return _bodyParameters;
        }
    }
}
