// <auto-generated />
// not actually

/*
 *
 *      DO NOT REGENERATE
 *
 */

using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject(MemberSerialization.Fields)]
    internal readonly partial struct AddModRequest : IApiRequest
    {
        static readonly Dictionary<string, object> _bodyParameters = new Dictionary<string, object>();

#nullable enable
        /// <summary></summary>
        internal readonly string Name;
        /// <summary>The name ID is used in the URL to identify the mod. It must be unique andcontain only lowercase letters, numbers, and dashes.</summary>
        internal readonly string? NameId;
        /// <summary></summary>
        internal readonly string Summary;
        /// <summary></summary>
        internal readonly string? Description;
        /// <summary></summary>
        internal readonly ModioAPIFileParameter Logo;
        /// <summary>Visibility of the mod (best if this field is controlled by mod admins, see [status and visibility](#status-amp-visibility) for details):<br/><br/>__0__ = Hidden<br/>__1__ = Public</summary>
        internal readonly long? Visible;
        /// <summary>Mature content found in this mod.<br/><br/>__NOTE:__ The value of this field will default to 0 unless the parent game allows you to flag mature content (see `maturity_options` field in [Game Object](#game-object)).<br/><br/>__0__ = None set<br/>__1__ = Alcohol<br/>__2__ = Drugs<br/>__4__ = Violence<br/>__8__ = Explicit<br/>__?__ = Add the options you want together, to enable multiple options (see [BITWISE fields](#bitwise-and-bitwise-and))</summary>
        internal readonly long? MaturityOption;
        /// <summary>Community features enabled for this mod:<br/><br/>__0__ = All the options below are disabled<br/>__1__ = Enable comments<br/>__64__ = Enable previews<br/>__128__ = Enable preview URLs<br/>__1024__ = Allow dependencies<br/>__?__ = Add the options you want together, to enable multiple options (see [BITWISE fields](#bitwise-and-bitwise-and))</summary>
        internal readonly long? CommunityOptions;
        /// <summary>Metadata that accepts any string-based arbitrary value,up to a maximum of 50,000 characters.</summary>
        internal readonly string? MetadataBlob;
        /// <summary></summary>
        internal readonly string[]? Tags;
#nullable disable

        /// <param name="name"></param>
        /// <param name="name_id">The name ID is used in the URL to identify the mod. It must be unique andcontain only lowercase letters, numbers, and dashes.</param>
        /// <param name="summary"></param>
        /// <param name="description"></param>
        /// <param name="logo"></param>
        /// <param name="visible">Visibility of the mod (best if this field is controlled by mod admins, see [status and visibility](#status-amp-visibility) for details):<br/><br/>__0__ = Hidden<br/>__1__ = Public</param>
        /// <param name="maturity_option">Mature content found in this mod.<br/><br/>__NOTE:__ The value of this field will default to 0 unless the parent game allows you to flag mature content (see `maturity_options` field in [Game Object](#game-object)).<br/><br/>__0__ = None set<br/>__1__ = Alcohol<br/>__2__ = Drugs<br/>__4__ = Violence<br/>__8__ = Explicit<br/>__?__ = Add the options you want together, to enable multiple options (see [BITWISE fields](#bitwise-and-bitwise-and))</param>
        /// <param name="community_options">Community features enabled for this mod:<br/><br/>__0__ = All the options below are disabled<br/>__1__ = Enable comments<br/>__64__ = Enable previews<br/>__128__ = Enable preview URLs<br/>__1024__ = Allow dependencies<br/>__?__ = Add the options you want together, to enable multiple options (see [BITWISE fields](#bitwise-and-bitwise-and))</param>
        /// <param name="metadata_blob">Metadata that accepts any string-based arbitrary value,up to a maximum of 50,000 characters.</param>
        /// <param name="tags"></param>
        [JsonConstructor]
        public AddModRequest(
#nullable enable
            string name,
            string? name_id,
            string summary,
            string? description,
            ModioAPIFileParameter logo,
            long? visible,
            long? maturity_option,
            long? community_options,
            string? metadata_blob,
            string[]? tags
#nullable disable
        ) {
            Name = name;
            NameId = name_id;
            Summary = summary;
            Description = description;
            Logo = logo;
            Visible = visible;
            MaturityOption = maturity_option;
            CommunityOptions = community_options;
            MetadataBlob = metadata_blob;
            Tags = tags;
        }

        public IReadOnlyDictionary<string, object> GetBodyParameters()
        {
            _bodyParameters.Clear();

            _bodyParameters.Add("name", Name);
            _bodyParameters.Add("summary", Summary);
            _bodyParameters.Add("logo", Logo);
            
            if (!string.IsNullOrEmpty(NameId)) _bodyParameters.Add("name_id", NameId);
            if (!string.IsNullOrEmpty(Description)) _bodyParameters.Add("description", Description);
            if (Visible != null) _bodyParameters.Add("visible", Visible);
            if (MaturityOption != null) _bodyParameters.Add("maturity_option", MaturityOption);
            if (CommunityOptions != null) _bodyParameters.Add("community_options", CommunityOptions);
            if (MetadataBlob != null) _bodyParameters.Add("metadata_blob", MetadataBlob);
            if (Tags != null) _bodyParameters.Add("tags", Tags);

            return _bodyParameters;
        }
    }
}
