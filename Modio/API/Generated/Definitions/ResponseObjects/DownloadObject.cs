// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    internal readonly partial struct DownloadObject 
    {
        /// <summary>URL to download the file from the mod.io CDN.<br/><br/>__NOTE:__ If the [game](#edit-game) requires mod downloads to be initiated via the API, the `binary_url` returned will contain a verification hash. This hash must be supplied to get the modfile, and will expire after a certain period of time. Saving and reusing the `binary_url` won't work in this situation given it's dynamic nature.</summary>
        internal readonly string BinaryUrl;
        /// <summary>Unix timestamp of when the `binary_url` will expire.</summary>
        internal readonly long DateExpires;

        /// <param name="binaryUrl">URL to download the file from the mod.io CDN.<br/><br/>__NOTE:__ If the [game](#edit-game) requires mod downloads to be initiated via the API, the `binary_url` returned will contain a verification hash. This hash must be supplied to get the modfile, and will expire after a certain period of time. Saving and reusing the `binary_url` won't work in this situation given it's dynamic nature.</param>
        /// <param name="dateExpires">Unix timestamp of when the `binary_url` will expire.</param>
        [JsonConstructor]
        public DownloadObject(
            string binary_url,
            long date_expires
        ) {
            BinaryUrl = binary_url;
            DateExpires = date_expires;
        }
    }
}
