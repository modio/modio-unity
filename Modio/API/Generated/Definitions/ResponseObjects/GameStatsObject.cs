// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    internal readonly partial struct GameStatsObject 
    {
        /// <summary>Unique game id.</summary>
        internal readonly long GameId;
        /// <summary>Available mod count for the game.</summary>
        internal readonly long ModsCountTotal;
        /// <summary>Last 24hours of mod downloads for the game.</summary>
        internal readonly long ModsDownloadsToday;
        /// <summary>Total mods downloaded for the game.</summary>
        internal readonly long ModsDownloadsTotal;
        /// <summary>Average mods downloaded on a daily basis.</summary>
        internal readonly long ModsDownloadsDailyAverage;
        /// <summary>Total users who have subscribed to the mods for the game.</summary>
        internal readonly long ModsSubscribersTotal;
        /// <summary>Unix timestamp until this game's statistics are considered stale.</summary>
        internal readonly long DateExpires;

        /// <param name="gameId">Unique game id.</param>
        /// <param name="modsCountTotal">Available mod count for the game.</param>
        /// <param name="modsDownloadsToday">Last 24hours of mod downloads for the game.</param>
        /// <param name="modsDownloadsTotal">Total mods downloaded for the game.</param>
        /// <param name="modsDownloadsDailyAverage">Average mods downloaded on a daily basis.</param>
        /// <param name="modsSubscribersTotal">Total users who have subscribed to the mods for the game.</param>
        /// <param name="dateExpires">Unix timestamp until this game's statistics are considered stale.</param>
        [JsonConstructor]
        public GameStatsObject(
            long game_id,
            long mods_count_total,
            long mods_downloads_today,
            long mods_downloads_total,
            long mods_downloads_daily_average,
            long mods_subscribers_total,
            long date_expires
        ) {
            GameId = game_id;
            ModsCountTotal = mods_count_total;
            ModsDownloadsToday = mods_downloads_today;
            ModsDownloadsTotal = mods_downloads_total;
            ModsDownloadsDailyAverage = mods_downloads_daily_average;
            ModsSubscribersTotal = mods_subscribers_total;
            DateExpires = date_expires;
        }
    }
}
