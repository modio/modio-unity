// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject(MemberSerialization.Fields)]
    internal readonly partial struct ModDependenciesObject 
    {
        /// <summary>Unique mod id.</summary>
        internal readonly long Id;
        /// <summary>Unique game id.</summary>
        internal readonly long GameId;
        /// <summary>Status of the mod (see [status and visibility](#status-amp-visibility) for details):<br/><br/>__0__ = Not Accepted<br/>__1__ = Accepted<br/>__3__ = Deleted</summary>
        internal readonly long Status;
        /// <summary>Visibility of the mod (see [status and visibility](#status-amp-visibility) for details):<br/><br/>__0__ = Hidden<br/>__1__ = Public</summary>
        internal readonly long Visible;
        /// <summary>The user who published the mod.</summary>
        internal readonly UserObject SubmittedBy;
        /// <summary>Unix timestamp of date mod was registered.</summary>
        internal readonly long DateAdded;
        /// <summary>Unix timestamp of date mod was updated.</summary>
        internal readonly long DateUpdated;
        /// <summary>Unix timestamp of date mod was set live.</summary>
        internal readonly long DateLive;
        /// <summary>Mature content found in this mod, this is only relevant if the parent game allows mods to be labelled as mature:<br/><br/>__0__ = None<br/>__1__ = Alcohol<br/>__2__ = Drugs<br/>__4__ = Violence<br/>__8__ = Explicit<br/>__?__ = Add the options you want together, to enable multiple filters (see [BITWISE fields](#bitwise-and-bitwise-and))</summary>
        internal readonly long MaturityOption;
        /// <summary>Community features enabled for this mod:<br/><br/>__0__ = All of the options below are disabled<br/>__1__ = Enable comments<br/>__64__ = Enable previews<br/>__128__ = Enable preview URLs<br/>__1024__ = Allow dependencies<br/>__?__ = Add the options you want together, to enable multiple features (see [BITWISE fields](#bitwise-and-bitwise-and))</summary>
        internal readonly long CommunityOptions;
        /// <summary>Monetization features enabled for this mod:<br/><br/>__0__ = Access to monetization features disabled<br/>__1__ = Access to monetization features enabled by the game for this mod<br/>__2__ = Marketplace enabled<br/>__8__ = Quantity of this mod is limited<br/>__?__ = Add the options you want together, to enable multiple features (see [BITWISE fields](#bitwise-and-bitwise-and))</summary>
        internal readonly long MonetizationOptions;
        /// <summary>The stock of the mod. 0 is the default value, and is only used when the mod has limited quantity enabled.</summary>
        internal readonly long Stock;
        /// <summary>The price of the mod.</summary>
        internal readonly long Price;
        /// <summary>The tax of the mod.</summary>
        internal readonly long Tax;
        /// <summary>Contains media URL's to the logo for the mod.</summary>
        internal readonly LogoObject Logo;
        /// <summary>Official homepage of the mod.</summary>
        internal readonly string HomepageUrl;
        /// <summary>Name of the mod.</summary>
        internal readonly string Name;
        /// <summary>Path for the mod on mod.io. For example: https://mod.io/g/rogue-knight/m/__rogue-knight-hd-pack__</summary>
        internal readonly string NameId;
        /// <summary>Summary of the mod.</summary>
        internal readonly string Summary;
        /// <summary>Detailed description of the mod which allows HTML.</summary>
        internal readonly string Description;
        /// <summary>`description` field converted into plaintext.</summary>
        internal readonly string DescriptionPlaintext;
        /// <summary>Metadata that is designed to be handled by the game client and is recommended to not be exposed to content creators when submitting their mods. Metadata can also be stored as searchable [key value pairs](#metadata), and to individual [mod files](#get-modfiles).</summary>
        internal readonly string MetadataBlob;
        /// <summary>URL to the mod.</summary>
        internal readonly string ProfileUrl;
        /// <summary>Contains YouTube &amp; Sketchfab links, aswell as media URL's of images for the mod.</summary>
        internal readonly ModMediaObject Media;
        /// <summary>The primary modfile for the mod.</summary>
        internal readonly ModfileObject Modfile;
        /// <summary>If the mod has any dependencies, this value will be set to `true`.</summary>
        internal readonly bool Dependencies;
        /// <summary>Contains mod platform data.</summary>
        internal readonly ModPlatformsObject[] Platforms;
        /// <summary>Contains key-value metadata.</summary>
        internal readonly MetadataKvpObject[] MetadataKvp;
        /// <summary>Contains mod tag data.</summary>
        internal readonly ModTagObject[] Tags;
        /// <summary>Numerous aggregate stats for the mod.</summary>
        internal readonly ModStatsObject Stats;
        /// <summary>The depth of the dependency tree for this mod.</summary>
        internal readonly long DependencyDepth;

        /// <param name="id">Unique mod id.</param>
        /// <param name="gameId">Unique game id.</param>
        /// <param name="status">Status of the mod (see [status and visibility](#status-amp-visibility) for details):<br/><br/>__0__ = Not Accepted<br/>__1__ = Accepted<br/>__3__ = Deleted</param>
        /// <param name="visible">Visibility of the mod (see [status and visibility](#status-amp-visibility) for details):<br/><br/>__0__ = Hidden<br/>__1__ = Public</param>
        /// <param name="submittedBy">The user who published the mod.</param>
        /// <param name="dateAdded">Unix timestamp of date mod was registered.</param>
        /// <param name="dateUpdated">Unix timestamp of date mod was updated.</param>
        /// <param name="dateLive">Unix timestamp of date mod was set live.</param>
        /// <param name="maturityOption">Mature content found in this mod, this is only relevant if the parent game allows mods to be labelled as mature:<br/><br/>__0__ = None<br/>__1__ = Alcohol<br/>__2__ = Drugs<br/>__4__ = Violence<br/>__8__ = Explicit<br/>__?__ = Add the options you want together, to enable multiple filters (see [BITWISE fields](#bitwise-and-bitwise-and))</param>
        /// <param name="communityOptions">Community features enabled for this mod:<br/><br/>__0__ = All of the options below are disabled<br/>__1__ = Enable comments<br/>__64__ = Enable previews<br/>__128__ = Enable preview URLs<br/>__1024__ = Allow dependencies<br/>__?__ = Add the options you want together, to enable multiple features (see [BITWISE fields](#bitwise-and-bitwise-and))</param>
        /// <param name="monetizationOptions">Monetization features enabled for this mod:<br/><br/>__0__ = Access to monetization features disabled<br/>__1__ = Access to monetization features enabled by the game for this mod<br/>__2__ = Marketplace enabled<br/>__8__ = Quantity of this mod is limited<br/>__?__ = Add the options you want together, to enable multiple features (see [BITWISE fields](#bitwise-and-bitwise-and))</param>
        /// <param name="stock">The stock of the mod. 0 is the default value, and is only used when the mod has limited quantity enabled.</param>
        /// <param name="price">The price of the mod.</param>
        /// <param name="tax">The tax of the mod.</param>
        /// <param name="logo">Contains media URL's to the logo for the mod.</param>
        /// <param name="homepageUrl">Official homepage of the mod.</param>
        /// <param name="name">Name of the mod.</param>
        /// <param name="nameId">Path for the mod on mod.io. For example: https://mod.io/g/rogue-knight/m/__rogue-knight-hd-pack__</param>
        /// <param name="summary">Summary of the mod.</param>
        /// <param name="description">Detailed description of the mod which allows HTML.</param>
        /// <param name="descriptionPlaintext">`description` field converted into plaintext.</param>
        /// <param name="metadataBlob">Metadata that is designed to be handled by the game client and is recommended to not be exposed to content creators when submitting their mods. Metadata can also be stored as searchable [key value pairs](#metadata), and to individual [mod files](#get-modfiles).</param>
        /// <param name="profileUrl">URL to the mod.</param>
        /// <param name="media">Contains YouTube &amp; Sketchfab links, aswell as media URL's of images for the mod.</param>
        /// <param name="modfile">The primary modfile for the mod.</param>
        /// <param name="dependencies">If the mod has any dependencies, this value will be set to `true`.</param>
        /// <param name="platforms">Contains mod platform data.</param>
        /// <param name="metadataKvp">Contains key-value metadata.</param>
        /// <param name="tags">Contains mod tag data.</param>
        /// <param name="stats">Numerous aggregate stats for the mod.</param>
        /// <param name="dependencyDepth">The depth of the dependency tree for this mod.</param>
        [JsonConstructor]
        public ModDependenciesObject(
            long id,
            long game_id,
            long status,
            long visible,
            UserObject submitted_by,
            long date_added,
            long date_updated,
            long date_live,
            long maturity_option,
            long community_options,
            long monetization_options,
            long stock,
            long price,
            long tax,
            LogoObject logo,
            string homepage_url,
            string name,
            string name_id,
            string summary,
            string description,
            string description_plaintext,
            string metadata_blob,
            string profile_url,
            ModMediaObject media,
            ModfileObject modfile,
            bool dependencies,
            ModPlatformsObject[] platforms,
            MetadataKvpObject[] metadata_kvp,
            ModTagObject[] tags,
            ModStatsObject stats,
            long dependency_depth
        ) {
            Id = id;
            GameId = game_id;
            Status = status;
            Visible = visible;
            SubmittedBy = submitted_by;
            DateAdded = date_added;
            DateUpdated = date_updated;
            DateLive = date_live;
            MaturityOption = maturity_option;
            CommunityOptions = community_options;
            MonetizationOptions = monetization_options;
            Stock = stock;
            Price = price;
            Tax = tax;
            Logo = logo;
            HomepageUrl = homepage_url;
            Name = name;
            NameId = name_id;
            Summary = summary;
            Description = description;
            DescriptionPlaintext = description_plaintext;
            MetadataBlob = metadata_blob;
            ProfileUrl = profile_url;
            Media = media;
            Modfile = modfile;
            Dependencies = dependencies;
            Platforms = platforms;
            MetadataKvp = metadata_kvp;
            Tags = tags;
            Stats = stats;
            DependencyDepth = dependency_depth;
        }
    }
}
