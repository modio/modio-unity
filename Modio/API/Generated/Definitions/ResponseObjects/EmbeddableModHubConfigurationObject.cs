// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    internal readonly partial struct EmbeddableModHubConfigurationObject 
    {
        /// <summary>Unique EMH id.</summary>
        internal readonly long Id;
        /// <summary>Name of the EMH version.</summary>
        internal readonly string Name;
        /// <summary>An array of URLs that may access this EMH configuration.</summary>
        internal readonly string[] Urls;
        /// <summary>Pre-defined styling properties.</summary>
        internal readonly string Style;
        /// <summary>Custom styling properties.</summary>
        internal readonly string Css;
        /// <summary>Flag to allow subscribing.</summary>
        internal readonly bool AllowSubscribing;
        /// <summary>Flag to allow rating.</summary>
        internal readonly bool AllowRating;
        /// <summary>Flag to allow reporting.</summary>
        internal readonly bool AllowReporting;
        /// <summary>Flag to allow downloading.</summary>
        internal readonly bool AllowDownloading;
        /// <summary>Flag to allow commenting.</summary>
        internal readonly bool AllowCommenting;
        /// <summary>Flag to allow filtering.</summary>
        internal readonly bool AllowFiltering;
        /// <summary>Flag to allow searching.</summary>
        internal readonly bool AllowSearching;
        /// <summary>Flag to allow infinite scroll.</summary>
        internal readonly bool AllowInfiniteScroll;
        /// <summary>Flag to allow email authentication.</summary>
        internal readonly bool AllowEmailAuth;
        /// <summary>Flag to allow SSO authentication.</summary>
        internal readonly bool AllowSsoAuth;
        /// <summary>Flag to allow Steam authentication.</summary>
        internal readonly bool AllowSteamAuth;
        /// <summary>Flag to allow PSN authentication.</summary>
        internal readonly bool AllowPsnAuth;
        /// <summary>Flag to allow Xbox authentication.</summary>
        internal readonly bool AllowXboxAuth;
        /// <summary>Flag to allow Epic Games Store authentication.</summary>
        internal readonly bool AllowEgsAuth;
        /// <summary>Flag to allow Discord authentication.</summary>
        internal readonly bool AllowDiscordAuth;
        /// <summary>Flag to allow Google authentication.</summary>
        internal readonly bool AllowGoogleAuth;
        /// <summary>Flag to allow mod management via collection.</summary>
        internal readonly bool ShowCollection;
        /// <summary>Flag to show comments.</summary>
        internal readonly bool ShowComments;
        /// <summary>Flag to show guides.</summary>
        internal readonly bool ShowGuides;
        /// <summary>Flag to show user avatars.</summary>
        internal readonly bool ShowUserAvatars;
        /// <summary>Flag to show sort tabs.</summary>
        internal readonly bool ShowSortTabs;
        /// <summary>Flag to allow user submitted links.</summary>
        internal readonly bool AllowLinks;
        /// <summary>Flag to move the filters to the right.</summary>
        internal readonly bool FilterRightSide;
        /// <summary>Flag to move the mod/guide name to the right.</summary>
        internal readonly bool NameRightSide;
        /// <summary>Number of results to show per page.</summary>
        internal readonly long ResultsPerPage;
        /// <summary>Minimum age for EMH access.</summary>
        internal readonly long MinAge;
        /// <summary>Timestamp indicating the date when the configuration was added.</summary>
        internal readonly long DateAdded;
        /// <summary>Timestamp indicating the date when the configuration was last updated.</summary>
        internal readonly long DateUpdated;
        /// <summary>The company name used for EMH agreements.</summary>
        internal readonly string CompanyName;
        /// <summary>The configured agreement names and urls used for the EMH.</summary>
        internal readonly object[] AgreementUrls;

        /// <param name="id">Unique EMH id.</param>
        /// <param name="name">Name of the EMH version.</param>
        /// <param name="urls">An array of URLs that may access this EMH configuration.</param>
        /// <param name="style">Pre-defined styling properties.</param>
        /// <param name="css">Custom styling properties.</param>
        /// <param name="allowSubscribing">Flag to allow subscribing.</param>
        /// <param name="allowRating">Flag to allow rating.</param>
        /// <param name="allowReporting">Flag to allow reporting.</param>
        /// <param name="allowDownloading">Flag to allow downloading.</param>
        /// <param name="allowCommenting">Flag to allow commenting.</param>
        /// <param name="allowFiltering">Flag to allow filtering.</param>
        /// <param name="allowSearching">Flag to allow searching.</param>
        /// <param name="allowInfiniteScroll">Flag to allow infinite scroll.</param>
        /// <param name="allowEmailAuth">Flag to allow email authentication.</param>
        /// <param name="allowSsoAuth">Flag to allow SSO authentication.</param>
        /// <param name="allowSteamAuth">Flag to allow Steam authentication.</param>
        /// <param name="allowPsnAuth">Flag to allow PSN authentication.</param>
        /// <param name="allowXboxAuth">Flag to allow Xbox authentication.</param>
        /// <param name="allowEgsAuth">Flag to allow Epic Games Store authentication.</param>
        /// <param name="allowDiscordAuth">Flag to allow Discord authentication.</param>
        /// <param name="allowGoogleAuth">Flag to allow Google authentication.</param>
        /// <param name="showCollection">Flag to allow mod management via collection.</param>
        /// <param name="showComments">Flag to show comments.</param>
        /// <param name="showGuides">Flag to show guides.</param>
        /// <param name="showUserAvatars">Flag to show user avatars.</param>
        /// <param name="showSortTabs">Flag to show sort tabs.</param>
        /// <param name="allowLinks">Flag to allow user submitted links.</param>
        /// <param name="filterRightSide">Flag to move the filters to the right.</param>
        /// <param name="nameRightSide">Flag to move the mod/guide name to the right.</param>
        /// <param name="resultsPerPage">Number of results to show per page.</param>
        /// <param name="minAge">Minimum age for EMH access.</param>
        /// <param name="dateAdded">Timestamp indicating the date when the configuration was added.</param>
        /// <param name="dateUpdated">Timestamp indicating the date when the configuration was last updated.</param>
        /// <param name="companyName">The company name used for EMH agreements.</param>
        /// <param name="agreementUrls">The configured agreement names and urls used for the EMH.</param>
        [JsonConstructor]
        public EmbeddableModHubConfigurationObject(
            long id,
            string name,
            string[] urls,
            string style,
            string css,
            bool allow_subscribing,
            bool allow_rating,
            bool allow_reporting,
            bool allow_downloading,
            bool allow_commenting,
            bool allow_filtering,
            bool allow_searching,
            bool allow_infinite_scroll,
            bool allow_email_auth,
            bool allow_sso_auth,
            bool allow_steam_auth,
            bool allow_PSN_auth,
            bool allow_xbox_auth,
            bool allow_egs_auth,
            bool allow_discord_auth,
            bool allow_google_auth,
            bool show_collection,
            bool show_comments,
            bool show_guides,
            bool show_user_avatars,
            bool show_sort_tabs,
            bool allow_links,
            bool filter_right_side,
            bool name_right_side,
            long results_per_page,
            long min_age,
            long date_added,
            long date_updated,
            string company_name,
            object[] agreement_urls
        ) {
            Id = id;
            Name = name;
            Urls = urls;
            Style = style;
            Css = css;
            AllowSubscribing = allow_subscribing;
            AllowRating = allow_rating;
            AllowReporting = allow_reporting;
            AllowDownloading = allow_downloading;
            AllowCommenting = allow_commenting;
            AllowFiltering = allow_filtering;
            AllowSearching = allow_searching;
            AllowInfiniteScroll = allow_infinite_scroll;
            AllowEmailAuth = allow_email_auth;
            AllowSsoAuth = allow_sso_auth;
            AllowSteamAuth = allow_steam_auth;
            AllowPsnAuth = allow_PSN_auth;
            AllowXboxAuth = allow_xbox_auth;
            AllowEgsAuth = allow_egs_auth;
            AllowDiscordAuth = allow_discord_auth;
            AllowGoogleAuth = allow_google_auth;
            ShowCollection = show_collection;
            ShowComments = show_comments;
            ShowGuides = show_guides;
            ShowUserAvatars = show_user_avatars;
            ShowSortTabs = show_sort_tabs;
            AllowLinks = allow_links;
            FilterRightSide = filter_right_side;
            NameRightSide = name_right_side;
            ResultsPerPage = results_per_page;
            MinAge = min_age;
            DateAdded = date_added;
            DateUpdated = date_updated;
            CompanyName = company_name;
            AgreementUrls = agreement_urls;
        }
    }
}
