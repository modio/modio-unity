// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    internal readonly partial struct AgreementVersionObject 
    {
        /// <summary>Unique id of the agreement.</summary>
        internal readonly long Id;
        /// <summary>Is the agreement currently active? (This can also be determined if date_live <= the current time).</summary>
        internal readonly bool IsActive;
        /// <summary>Is this the latest version of the agreement?</summary>
        internal readonly bool IsLatest;
        /// <summary>The type of agreement. Can be one of the following:<br/><br/>__1__ = Terms<br/>__2__ = Privacy<br/>__3__ = Game<br/>__4__ = API<br/>__5__ = Monetization<br/>__6__ = AUP<br/>__7__ = Cookies<br/>__8__ = Refund</summary>
        internal readonly long Type;
        /// <summary></summary>
        internal readonly UserObject User;
        /// <summary>Unix timestamp of the date the agreement was added.</summary>
        internal readonly long DateAdded;
        /// <summary>Unix timestamp of the date the agreement was updated.</summary>
        internal readonly long DateUpdated;
        /// <summary>Unix timestamp of the date the agreement was set live.</summary>
        internal readonly long DateLive;
        /// <summary>Name of the agreement.</summary>
        internal readonly string Name;
        /// <summary>Changelog for version of this agreement.</summary>
        internal readonly string Changelog;
        /// <summary>The contents of the agreement.</summary>
        internal readonly string Description;
        /// <summary>The previous and next versions of the agreement.</summary>
        internal readonly JObject AdjacentVersions;

        /// <param name="id">Unique id of the agreement.</param>
        /// <param name="isActive">Is the agreement currently active? (This can also be determined if date_live <= the current time).</param>
        /// <param name="isLatest">Is this the latest version of the agreement?</param>
        /// <param name="type">The type of agreement. Can be one of the following:<br/><br/>__1__ = Terms<br/>__2__ = Privacy<br/>__3__ = Game<br/>__4__ = API<br/>__5__ = Monetization<br/>__6__ = AUP<br/>__7__ = Cookies<br/>__8__ = Refund</param>
        /// <param name="user"></param>
        /// <param name="dateAdded">Unix timestamp of the date the agreement was added.</param>
        /// <param name="dateUpdated">Unix timestamp of the date the agreement was updated.</param>
        /// <param name="dateLive">Unix timestamp of the date the agreement was set live.</param>
        /// <param name="name">Name of the agreement.</param>
        /// <param name="changelog">Changelog for version of this agreement.</param>
        /// <param name="description">The contents of the agreement.</param>
        /// <param name="adjacentVersions">The previous and next versions of the agreement.</param>
        [JsonConstructor]
        public AgreementVersionObject(
            long id,
            bool is_active,
            bool is_latest,
            long type,
            UserObject user,
            long date_added,
            long date_updated,
            long date_live,
            string name,
            string changelog,
            string description,
            JObject adjacent_versions
        ) {
            Id = id;
            IsActive = is_active;
            IsLatest = is_latest;
            Type = type;
            User = user;
            DateAdded = date_added;
            DateUpdated = date_updated;
            DateLive = date_live;
            Name = name;
            Changelog = changelog;
            Description = description;
            AdjacentVersions = adjacent_versions;
        }
    }
}
