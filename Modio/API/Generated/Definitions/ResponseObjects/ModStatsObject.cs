// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject(MemberSerialization.Fields)]
    internal readonly partial struct ModStatsObject 
    {
        /// <summary>Unique mod id.</summary>
        internal readonly long ModId;
        /// <summary>Current rank of the mod.</summary>
        internal readonly long PopularityRankPosition;
        /// <summary>Number of ranking spots the current rank is measured against.</summary>
        internal readonly long PopularityRankTotalMods;
        /// <summary>Last 24hours of downloads for the mod.</summary>
        internal readonly long DownloadsToday;
        /// <summary>Total downloads for the mod.</summary>
        internal readonly long DownloadsTotal;
        /// <summary>Total users who have subscribed to the mod.</summary>
        internal readonly long SubscribersTotal;
        /// <summary>Total times the mod has been rated.</summary>
        internal readonly long RatingsTotal;
        /// <summary>Number of positive ratings.</summary>
        internal readonly long RatingsPositive;
        /// <summary>Number of negative ratings.</summary>
        internal readonly long RatingsNegative;
        /// <summary>Number of positive ratings, divided by the total ratings to determine it’s percentage score.</summary>
        internal readonly long RatingsPercentagePositive;
        /// <summary>Overall rating of this item calculated using the [Wilson score confidence interval](https://www.evanmiller.org/how-not-to-sort-by-average-rating.html). This column is good to sort on, as it will order items based on number of ratings and will place items with many positive ratings above those with a higher score but fewer ratings.</summary>
        internal readonly float RatingsWeightedAggregate;
        /// <summary>Textual representation of the rating in format:<br/><br/>- Overwhelmingly Positive<br/>- Very Positive<br/>- Positive<br/>- Mostly Positive<br/>- Mixed<br/>- Negative<br/>- Mostly Negative<br/>- Very Negative<br/>- Overwhelmingly Negative<br/>- Unrated</summary>
        internal readonly string RatingsDisplayText;
        /// <summary>Unix timestamp until this mods's statistics are considered stale.</summary>
        internal readonly long DateExpires;

        /// <param name="modId">Unique mod id.</param>
        /// <param name="popularityRankPosition">Current rank of the mod.</param>
        /// <param name="popularityRankTotalMods">Number of ranking spots the current rank is measured against.</param>
        /// <param name="downloadsToday">Last 24hours of downloads for the mod.</param>
        /// <param name="downloadsTotal">Total downloads for the mod.</param>
        /// <param name="subscribersTotal">Total users who have subscribed to the mod.</param>
        /// <param name="ratingsTotal">Total times the mod has been rated.</param>
        /// <param name="ratingsPositive">Number of positive ratings.</param>
        /// <param name="ratingsNegative">Number of negative ratings.</param>
        /// <param name="ratingsPercentagePositive">Number of positive ratings, divided by the total ratings to determine it’s percentage score.</param>
        /// <param name="ratingsWeightedAggregate">Overall rating of this item calculated using the [Wilson score confidence interval](https://www.evanmiller.org/how-not-to-sort-by-average-rating.html). This column is good to sort on, as it will order items based on number of ratings and will place items with many positive ratings above those with a higher score but fewer ratings.</param>
        /// <param name="ratingsDisplayText">Textual representation of the rating in format:<br/><br/>- Overwhelmingly Positive<br/>- Very Positive<br/>- Positive<br/>- Mostly Positive<br/>- Mixed<br/>- Negative<br/>- Mostly Negative<br/>- Very Negative<br/>- Overwhelmingly Negative<br/>- Unrated</param>
        /// <param name="dateExpires">Unix timestamp until this mods's statistics are considered stale.</param>
        [JsonConstructor]
        public ModStatsObject(
            long mod_id,
            long popularity_rank_position,
            long popularity_rank_total_mods,
            long downloads_today,
            long downloads_total,
            long subscribers_total,
            long ratings_total,
            long ratings_positive,
            long ratings_negative,
            long ratings_percentage_positive,
            float ratings_weighted_aggregate,
            string ratings_display_text,
            long date_expires
        ) {
            ModId = mod_id;
            PopularityRankPosition = popularity_rank_position;
            PopularityRankTotalMods = popularity_rank_total_mods;
            DownloadsToday = downloads_today;
            DownloadsTotal = downloads_total;
            SubscribersTotal = subscribers_total;
            RatingsTotal = ratings_total;
            RatingsPositive = ratings_positive;
            RatingsNegative = ratings_negative;
            RatingsPercentagePositive = ratings_percentage_positive;
            RatingsWeightedAggregate = ratings_weighted_aggregate;
            RatingsDisplayText = ratings_display_text;
            DateExpires = date_expires;
        }
    }
}
