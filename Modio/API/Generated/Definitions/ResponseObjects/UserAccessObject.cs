// <auto-generated />
using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Linq;

namespace Modio.API.SchemaDefinitions{
    [JsonObject]
    internal readonly partial struct UserAccessObject 
    {
        /// <summary>Type of resource. Can be one of the following:<br/><br/>- _games_<br/>- _mods_<br/>-_guides_</summary>
        internal readonly string ResourceType;
        /// <summary>Unique id of the resource.</summary>
        internal readonly long ResourceId;
        /// <summary>The relative name of the resource.</summary>
        internal readonly long ResourceName;
        /// <summary>Path for the resource on mod.io.</summary>
        internal readonly string ResourceNameId;
        /// <summary>URL to the resource that was reported. If the resource has been permanently deleted, and thus you cannot access it anymore - this field will be null.</summary>
        internal readonly string ResourceUrl;

        /// <param name="resourceType">Type of resource. Can be one of the following:<br/><br/>- _games_<br/>- _mods_<br/>-_guides_</param>
        /// <param name="resourceId">Unique id of the resource.</param>
        /// <param name="resourceName">The relative name of the resource.</param>
        /// <param name="resourceNameId">Path for the resource on mod.io.</param>
        /// <param name="resourceUrl">URL to the resource that was reported. If the resource has been permanently deleted, and thus you cannot access it anymore - this field will be null.</param>
        [JsonConstructor]
        public UserAccessObject(
            string resource_type,
            long resource_id,
            long resource_name,
            string resource_name_id,
            string resource_url
        ) {
            ResourceType = resource_type;
            ResourceId = resource_id;
            ResourceName = resource_name;
            ResourceNameId = resource_name_id;
            ResourceUrl = resource_url;
        }
    }
}
