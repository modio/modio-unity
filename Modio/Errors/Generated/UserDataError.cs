// <auto-generated />
namespace Modio.Errors
{
    public enum UserDataErrorCode : long
    {
        NONE = ErrorCode.NONE,
        UNKNOWN = ErrorCode.UNKNOWN,
        /// <inheritdoc cref="ErrorCode.INVALID_USER" />
        INVALID_USER = ErrorCode.INVALID_USER,
        /// <inheritdoc cref="ErrorCode.BLOB_MISSING" />
        BLOB_MISSING = ErrorCode.BLOB_MISSING,
    }

    public class UserDataError : Error
    {
        public static readonly new UserDataError None = new UserDataError(UserDataErrorCode.NONE);

        public new UserDataErrorCode Code => (UserDataErrorCode)base.Code;

        public UserDataError(UserDataErrorCode code) : base((ErrorCode)code){ }
    }

    public static partial class ErrorExtensions
    {
        public static string GetMessage(this UserDataErrorCode errorCode, string append = null) => GetMessage((ErrorCode)errorCode, append);
    }
}
