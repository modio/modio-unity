// <auto-generated />
namespace Modio.Errors
{
    public enum ModValidationErrorCode : long
    {
        NONE = ErrorCode.NONE,
        UNKNOWN = ErrorCode.UNKNOWN,
        /// <inheritdoc cref="ErrorCode.NO_FILES_FOUND_FOR_MOD" />
        NO_FILES_FOUND_FOR_MOD = ErrorCode.NO_FILES_FOUND_FOR_MOD,
        /// <inheritdoc cref="ErrorCode.MOD_DIRECTORY_NOT_FOUND" />
        MOD_DIRECTORY_NOT_FOUND = ErrorCode.MOD_DIRECTORY_NOT_FOUND,
        /// <inheritdoc cref="ErrorCode.MD5DOES_NOT_MATCH" />
        MD5DOES_NOT_MATCH = ErrorCode.MD5DOES_NOT_MATCH,
    }

    public class ModValidationError : Error
    {
        public static readonly new ModValidationError None = new ModValidationError(ModValidationErrorCode.NONE);

        public new ModValidationErrorCode Code => (ModValidationErrorCode)base.Code;

        public ModValidationError(ModValidationErrorCode code) : base((ErrorCode)code){ }
    }

    public static partial class ErrorExtensions
    {
        public static string GetMessage(this ModValidationErrorCode errorCode, string append = null) => GetMessage((ErrorCode)errorCode, append);
    }
}
