// <auto-generated />
namespace Modio.Errors
{
    public enum ApiErrorCode : long
    {
        NONE = ErrorCode.NONE,
        UNKNOWN = ErrorCode.UNKNOWN,
        /// <inheritdoc cref="ErrorCode.MODIO_OUTAGE" />
        MODIO_OUTAGE = ErrorCode.MODIO_OUTAGE,
        /// <inheritdoc cref="ErrorCode.CROSS_ORIGIN_FORBIDDEN" />
        CROSS_ORIGIN_FORBIDDEN = ErrorCode.CROSS_ORIGIN_FORBIDDEN,
        /// <inheritdoc cref="ErrorCode.FAILED_TO_COMPLETE_THE_REQUEST" />
        FAILED_TO_COMPLETE_THE_REQUEST = ErrorCode.FAILED_TO_COMPLETE_THE_REQUEST,
        /// <inheritdoc cref="ErrorCode.INVALID_API_VERSION" />
        INVALID_API_VERSION = ErrorCode.INVALID_API_VERSION,
        /// <inheritdoc cref="ErrorCode.MISSING_APIKEY" />
        MISSING_APIKEY = ErrorCode.MISSING_APIKEY,
        /// <inheritdoc cref="ErrorCode.MALFORMED_APIKEY" />
        MALFORMED_APIKEY = ErrorCode.MALFORMED_APIKEY,
        /// <inheritdoc cref="ErrorCode.INVALID_APIKEY" />
        INVALID_APIKEY = ErrorCode.INVALID_APIKEY,
        /// <inheritdoc cref="ErrorCode.MISSING_WRITE_PERMISSION" />
        MISSING_WRITE_PERMISSION = ErrorCode.MISSING_WRITE_PERMISSION,
        /// <inheritdoc cref="ErrorCode.MISSING_READ_PERMISSION" />
        MISSING_READ_PERMISSION = ErrorCode.MISSING_READ_PERMISSION,
        /// <inheritdoc cref="ErrorCode.EXPIRED_OR_REVOKED_ACCESS_TOKEN" />
        EXPIRED_OR_REVOKED_ACCESS_TOKEN = ErrorCode.EXPIRED_OR_REVOKED_ACCESS_TOKEN,
        /// <inheritdoc cref="ErrorCode.AUTHENTICATED_ACCOUNT_HAS_BEEN_DELETED" />
        AUTHENTICATED_ACCOUNT_HAS_BEEN_DELETED = ErrorCode.AUTHENTICATED_ACCOUNT_HAS_BEEN_DELETED,
        /// <inheritdoc cref="ErrorCode.BANNED_USER_ACCOUNT" />
        BANNED_USER_ACCOUNT = ErrorCode.BANNED_USER_ACCOUNT,
        /// <inheritdoc cref="ErrorCode.RATELIMITED" />
        RATELIMITED = ErrorCode.RATELIMITED,
        /// <inheritdoc cref="ErrorCode.RATELIMITED_SAME_ENDPOINT" />
        RATELIMITED_SAME_ENDPOINT = ErrorCode.RATELIMITED_SAME_ENDPOINT,
        /// <inheritdoc cref="ErrorCode.APIKEY_HAS_NO_GAME" />
        APIKEY_HAS_NO_GAME = ErrorCode.APIKEY_HAS_NO_GAME,
        /// <inheritdoc cref="ErrorCode.APIKEY_FOR_TEST_ONLY" />
        APIKEY_FOR_TEST_ONLY = ErrorCode.APIKEY_FOR_TEST_ONLY,
        /// <inheritdoc cref="ErrorCode.CANNOT_VERIFY_EXTERNAL_CREDENTIALS" />
        CANNOT_VERIFY_EXTERNAL_CREDENTIALS = ErrorCode.CANNOT_VERIFY_EXTERNAL_CREDENTIALS,
        /// <inheritdoc cref="ErrorCode.USER_NO_ACCEPT_TERMS_OF_USE" />
        USER_NO_ACCEPT_TERMS_OF_USE = ErrorCode.USER_NO_ACCEPT_TERMS_OF_USE,
        /// <inheritdoc cref="ErrorCode.OPEN_IDNOT_CONFIGURED" />
        OPEN_IDNOT_CONFIGURED = ErrorCode.OPEN_IDNOT_CONFIGURED,
        /// <inheritdoc cref="ErrorCode.BINARY_FILE_CORRUPTED" />
        BINARY_FILE_CORRUPTED = ErrorCode.BINARY_FILE_CORRUPTED,
        /// <inheritdoc cref="ErrorCode.BINARY_FILE_UNREADABLE" />
        BINARY_FILE_UNREADABLE = ErrorCode.BINARY_FILE_UNREADABLE,
        /// <inheritdoc cref="ErrorCode.INVALID_JSON" />
        INVALID_JSON = ErrorCode.INVALID_JSON,
        /// <inheritdoc cref="ErrorCode.MISSING_CONTENT_TYPE_HEADER" />
        MISSING_CONTENT_TYPE_HEADER = ErrorCode.MISSING_CONTENT_TYPE_HEADER,
        /// <inheritdoc cref="ErrorCode.UNSUPPORTED_CONTENT_TYPE_HEADER" />
        UNSUPPORTED_CONTENT_TYPE_HEADER = ErrorCode.UNSUPPORTED_CONTENT_TYPE_HEADER,
        /// <inheritdoc cref="ErrorCode.REQUESTED_INVALID_RESPONSE_FORMAT" />
        REQUESTED_INVALID_RESPONSE_FORMAT = ErrorCode.REQUESTED_INVALID_RESPONSE_FORMAT,
        /// <inheritdoc cref="ErrorCode.VALIDATION_ERRORS" />
        VALIDATION_ERRORS = ErrorCode.VALIDATION_ERRORS,
        /// <inheritdoc cref="ErrorCode.REQUESTED_RESOURCE_NOT_FOUND" />
        REQUESTED_RESOURCE_NOT_FOUND = ErrorCode.REQUESTED_RESOURCE_NOT_FOUND,
        /// <inheritdoc cref="ErrorCode.REQUESTED_GAME_NOT_FOUND" />
        REQUESTED_GAME_NOT_FOUND = ErrorCode.REQUESTED_GAME_NOT_FOUND,
        /// <inheritdoc cref="ErrorCode.REQUESTED_GAME_DELETED" />
        REQUESTED_GAME_DELETED = ErrorCode.REQUESTED_GAME_DELETED,
        /// <inheritdoc cref="ErrorCode.FORBIDDEN_DMCA" />
        FORBIDDEN_DMCA = ErrorCode.FORBIDDEN_DMCA,
        /// <inheritdoc cref="ErrorCode.FORBIDDEN_HIDDEN" />
        FORBIDDEN_HIDDEN = ErrorCode.FORBIDDEN_HIDDEN,
        /// <inheritdoc cref="ErrorCode.ALREADY_UNSUBSCRIBED" />
        ALREADY_UNSUBSCRIBED = ErrorCode.ALREADY_UNSUBSCRIBED,
        /// <inheritdoc cref="ErrorCode.MODFILE_NO_UPLOAD_PERMISSION" />
        MODFILE_NO_UPLOAD_PERMISSION = ErrorCode.MODFILE_NO_UPLOAD_PERMISSION,
        /// <inheritdoc cref="ErrorCode.REQUESTED_MODFILE_NOT_FOUND" />
        REQUESTED_MODFILE_NOT_FOUND = ErrorCode.REQUESTED_MODFILE_NOT_FOUND,
        /// <inheritdoc cref="ErrorCode.FORBIDDEN_TACNOT_ACCEPTED" />
        FORBIDDEN_TACNOT_ACCEPTED = ErrorCode.FORBIDDEN_TACNOT_ACCEPTED,
        /// <inheritdoc cref="ErrorCode.FORBIDDEN_MISSING_FILE" />
        FORBIDDEN_MISSING_FILE = ErrorCode.FORBIDDEN_MISSING_FILE,
        /// <inheritdoc cref="ErrorCode.INSUFFICIENT_PERMISSION" />
        INSUFFICIENT_PERMISSION = ErrorCode.INSUFFICIENT_PERMISSION,
        /// <inheritdoc cref="ErrorCode.REQUESTED_MOD_NOT_FOUND" />
        REQUESTED_MOD_NOT_FOUND = ErrorCode.REQUESTED_MOD_NOT_FOUND,
        /// <inheritdoc cref="ErrorCode.REQUESTED_MOD_DELETED" />
        REQUESTED_MOD_DELETED = ErrorCode.REQUESTED_MOD_DELETED,
        /// <inheritdoc cref="ErrorCode.REQUESTED_COMMENT_NOT_FOUND" />
        REQUESTED_COMMENT_NOT_FOUND = ErrorCode.REQUESTED_COMMENT_NOT_FOUND,
        /// <inheritdoc cref="ErrorCode.USER_EXISTING_MOD_RATING" />
        USER_EXISTING_MOD_RATING = ErrorCode.USER_EXISTING_MOD_RATING,
        /// <inheritdoc cref="ErrorCode.SUBMIT_REPORT_RIGHTS_REVOKED" />
        SUBMIT_REPORT_RIGHTS_REVOKED = ErrorCode.SUBMIT_REPORT_RIGHTS_REVOKED,
        /// <inheritdoc cref="ErrorCode.REPORTED_ENTITY_UNAVAILABLE" />
        REPORTED_ENTITY_UNAVAILABLE = ErrorCode.REPORTED_ENTITY_UNAVAILABLE,
        /// <inheritdoc cref="ErrorCode.MOD_MEDIA_NO_ADD_PERMISSION" />
        MOD_MEDIA_NO_ADD_PERMISSION = ErrorCode.MOD_MEDIA_NO_ADD_PERMISSION,
        /// <inheritdoc cref="ErrorCode.MOD_MEDIA_NO_DELETE_PERMISSION" />
        MOD_MEDIA_NO_DELETE_PERMISSION = ErrorCode.MOD_MEDIA_NO_DELETE_PERMISSION,
        /// <inheritdoc cref="ErrorCode.USER_NO_MOD_RATING" />
        USER_NO_MOD_RATING = ErrorCode.USER_NO_MOD_RATING,
        /// <inheritdoc cref="ErrorCode.MATURE_MODS_NOT_ALLOWED" />
        MATURE_MODS_NOT_ALLOWED = ErrorCode.MATURE_MODS_NOT_ALLOWED,
        /// <inheritdoc cref="ErrorCode.MUTE_USER_NOT_FOUND" />
        MUTE_USER_NOT_FOUND = ErrorCode.MUTE_USER_NOT_FOUND,
        /// <inheritdoc cref="ErrorCode.CANNOT_MUTE_YOURSELF" />
        CANNOT_MUTE_YOURSELF = ErrorCode.CANNOT_MUTE_YOURSELF,
        /// <inheritdoc cref="ErrorCode.REQUESTED_USER_NOT_FOUND" />
        REQUESTED_USER_NOT_FOUND = ErrorCode.REQUESTED_USER_NOT_FOUND,
        /// <inheritdoc cref="ErrorCode.MONETIZATION_UNEXPECTED_ERROR" />
        MONETIZATION_UNEXPECTED_ERROR = ErrorCode.MONETIZATION_UNEXPECTED_ERROR,
        /// <inheritdoc cref="ErrorCode.MONETIZATION_UNABLE_TO_COMMUNICATE" />
        MONETIZATION_UNABLE_TO_COMMUNICATE = ErrorCode.MONETIZATION_UNABLE_TO_COMMUNICATE,
        /// <inheritdoc cref="ErrorCode.MONETIZATION_AUTHENTICATION" />
        MONETIZATION_AUTHENTICATION = ErrorCode.MONETIZATION_AUTHENTICATION,
        /// <inheritdoc cref="ErrorCode.MONETIZATION_WALLET_FETCH_FAILED" />
        MONETIZATION_WALLET_FETCH_FAILED = ErrorCode.MONETIZATION_WALLET_FETCH_FAILED,
        /// <inheritdoc cref="ErrorCode.MONETIZATION_IN_MAINTENANCE" />
        MONETIZATION_IN_MAINTENANCE = ErrorCode.MONETIZATION_IN_MAINTENANCE,
        /// <inheritdoc cref="ErrorCode.MONETIZATION_GAME_MONETIZATION_NOT_ENABLED" />
        MONETIZATION_GAME_MONETIZATION_NOT_ENABLED = ErrorCode.MONETIZATION_GAME_MONETIZATION_NOT_ENABLED,
        /// <inheritdoc cref="ErrorCode.MONETIZATION_PAYMENT_FAILED" />
        MONETIZATION_PAYMENT_FAILED = ErrorCode.MONETIZATION_PAYMENT_FAILED,
        /// <inheritdoc cref="ErrorCode.MONETIZATION_ITEM_ALREADY_OWNED" />
        MONETIZATION_ITEM_ALREADY_OWNED = ErrorCode.MONETIZATION_ITEM_ALREADY_OWNED,
        /// <inheritdoc cref="ErrorCode.MONETIZATION_INCORRECT_DISPLAY_PRICE" />
        MONETIZATION_INCORRECT_DISPLAY_PRICE = ErrorCode.MONETIZATION_INCORRECT_DISPLAY_PRICE,
        /// <inheritdoc cref="ErrorCode.MONETIZATION_INSUFFICIENT_FUNDS" />
        MONETIZATION_INSUFFICIENT_FUNDS = ErrorCode.MONETIZATION_INSUFFICIENT_FUNDS,
    }

    public class ApiError : Error
    {
        public static readonly new ApiError None = new ApiError(ApiErrorCode.NONE);

        public new ApiErrorCode Code => (ApiErrorCode)base.Code;

        public ApiError(ApiErrorCode code) : base((ErrorCode)code){ }
    }

    public static partial class ErrorExtensions
    {
        public static string GetMessage(this ApiErrorCode errorCode, string append = null) => GetMessage((ErrorCode)errorCode, append);
    }
}
