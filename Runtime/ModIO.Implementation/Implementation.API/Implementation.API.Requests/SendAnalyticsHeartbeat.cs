using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Plugins.mod.io.Runtime.ModIO.Implementation.Classes;

namespace ModIO.Implementation.API.Requests
{
    internal static class SendAnalyticsHeartbeat
    {
        public static WebRequestConfig Request(string sessionId)
        {
            var request = new WebRequestConfig()
            {
                // https://{game-id}.modapi.io/v1/metrics/sessions/heartbeat
                Url = $"{Settings.server.serverURL}{@"/metrics/sessions/heartbeat"}",
                RequestMethodType = "POST",
            };

            var sessionOrderId = AnalyticsManager.IncreaseSessionOrderId(sessionId);
            var sessionData = AnalyticsManager.GetSession(sessionId);
            var nonce = Guid.NewGuid().ToString();
            var sessionTs = DateTimeOffset.UtcNow.ToUnixTimeMilliseconds().ToString();
            
            Dictionary<string, string> jsonKvps = new Dictionary<string, string>
            {
                {
                    "session_id", sessionId
                }, //Client provided and used in session start request previously,
                {
                    "session_ts", sessionTs
                }, //milliseconds since UNIX
                {
                    "session_hash", sessionData.GetSessionHash(false, sessionTs, nonce)
                }, //HMAC_SHA256(secret-key, session-ts + session_id + session_nonce)
                {
                    "session_nonce", nonce
                }, //unique nonce generated by integration
                {
                    "session_order_id", sessionOrderId.ToString()
                }, //starts at 2 and increments by 1 for each subsequent heartbeat
            };
            request.RawBodyData = JsonConvert.SerializeObject(jsonKvps);

            return request;
        }
    }
}
